{"ast":null,"code":"/**\n * Bundle of @devexpress/dx-react-chart-material-ui\n * Generated: 2019-09-16\n * Version: 2.0.5\n * License: https://js.devexpress.com/Licensing\n */\nimport { createElement, useState, forwardRef } from 'react';\nimport { node, string, object, any, bool, oneOfType, func } from 'prop-types';\nimport { withComponents } from '@devexpress/dx-react-core';\nimport { withPatchedProps, Chart as Chart$1, Palette, Legend as Legend$1, Title as Title$1, ScatterSeries as ScatterSeries$1, Axis, ValueAxis as ValueAxis$1, ArgumentAxis as ArgumentAxis$1, Tooltip as Tooltip$1, ZoomAndPan as ZoomAndPan$1 } from '@devexpress/dx-react-chart';\nexport { AreaSeries, BarSeries, LineSeries, PieSeries, SplineSeries } from '@devexpress/dx-react-chart';\nimport { lighten, fade, darken } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport Popper from '@material-ui/core/Popper';\nimport { RIGHT, TOP } from '@devexpress/dx-chart-core';\nimport Paper from '@material-ui/core/Paper';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar getBorderColor = function getBorderColor(theme) {\n  return theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68);\n};\n\nvar withClassName = function withClassName() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var setClassName = function setClassName(_ref) {\n    var className = _ref.className,\n        classes = _ref.classes,\n        restProps = _objectWithoutProperties(_ref, [\"className\", \"classes\"]);\n\n    return _objectSpread2({\n      className: classNames(classes.root, className)\n    }, restProps);\n  }; // TODO: First candidate to `compose` util?\n\n\n  return function (Target) {\n    return withStyles.apply(void 0, args)(withPatchedProps(setClassName)(Target));\n  };\n};\n\nvar styles = function styles(theme) {\n  var _theme$typography = theme.typography,\n      fontFamily = _theme$typography.fontFamily,\n      fontSize = _theme$typography.fontSize,\n      fontWeightLight = _theme$typography.fontWeightLight;\n  return {\n    root: {\n      fontFamily: fontFamily,\n      fontSize: fontSize,\n      fontWeight: fontWeightLight,\n      display: 'flex',\n      flexDirection: 'column',\n      padding: '10px',\n      boxSizing: 'border-box'\n    }\n  };\n};\n\nvar Root = withClassName(styles)(Chart$1.Root);\n\nvar styles$1 = function styles(theme) {\n  var fontFamily = theme.typography.fontFamily;\n  return {\n    root: {\n      fill: theme.palette.text.secondary,\n      fontFamily: fontFamily,\n      fontSize: 12,\n      fontWeight: 400\n    }\n  };\n};\n\nvar Label = withClassName(styles$1)(Chart$1.Label);\nvar palette = ['#42A5F5', '#FF7043', '#9CCC65', '#FFCA28', '#26A69A', '#EC407A'];\n\nvar ChartWithPalette = function ChartWithPalette(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return createElement(Chart$1, props, createElement(Palette, {\n    scheme: palette\n  }), children);\n};\n\nChartWithPalette.components = Chart$1.components;\nprocess.env.NODE_ENV !== \"production\" ? ChartWithPalette.propTypes = {\n  children: node.isRequired\n} : void 0;\nvar Chart = withComponents({\n  Root: Root\n})(ChartWithPalette);\nChart.Label = Label;\n\nvar styles$2 = function styles() {\n  return {\n    root: {\n      paddingTop: 16,\n      paddingBottom: 16\n    }\n  };\n};\n\nvar Root$1 = withClassName(styles$2, {\n  name: 'LegendRoot'\n})(List);\n\nvar styles$3 = function styles() {\n  return {\n    root: {\n      fontSize: 14,\n      paddingLeft: 8,\n      paddingRight: 8\n    }\n  };\n};\n\nvar Label$1 = withClassName(styles$3, {\n  name: 'LegendLabel'\n})(function (_ref) {\n  var text = _ref.text,\n      restProps = _objectWithoutProperties(_ref, [\"text\"]);\n\n  return createElement(ListItemText, restProps, text);\n});\n\nvar styles$4 = function styles(theme) {\n  return {\n    root: {\n      alignItems: 'center',\n      paddingTop: theme.spacing(0.5),\n      paddingBottom: theme.spacing(0.5)\n    }\n  };\n};\n\nvar Item = withClassName(styles$4, {\n  name: 'LegendItem'\n})(ListItem);\nvar Legend = withComponents({\n  Root: Root$1,\n  Item: Item,\n  Label: Label$1\n})(Legend$1);\n\nvar styles$5 = function styles() {\n  return {\n    root: {\n      textAlign: 'center',\n      width: '100%',\n      marginBottom: '20px'\n    }\n  };\n};\n\nvar Text = withClassName(styles$5, {\n  name: 'Title'\n})(function (_ref) {\n  var text = _ref.text,\n      restProps = _objectWithoutProperties(_ref, [\"text\"]);\n\n  return createElement(Typography, _extends({\n    component: \"h3\",\n    variant: \"h5\"\n  }, restProps), text);\n});\nvar Title = withComponents({\n  Text: Text\n})(Title$1);\n\nvar styles$6 = function styles(theme) {\n  return {\n    point: {\n      fill: theme.palette.background.paper\n    }\n  };\n};\n\nvar setClassName = function setClassName(_ref) {\n  var classes = _ref.classes,\n      restProps = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  if (restProps.state) {\n    var className = restProps.className,\n        rest = _objectWithoutProperties(restProps, [\"className\"]);\n\n    return _objectSpread2({\n      className: classNames(classes.point, className)\n    }, rest);\n  }\n\n  return restProps;\n};\n\nvar Point = withStyles(styles$6)(withPatchedProps(setClassName)(ScatterSeries$1.Point));\nvar ScatterSeries = withComponents({\n  Point: Point\n})(ScatterSeries$1);\n\nvar styles$7 = function styles() {\n  return {\n    root: {\n      shapeRendering: 'crispEdges'\n    }\n  };\n};\n\nvar Root$2 = withClassName(styles$7)(Axis.Root);\n\nvar styles$8 = function styles(theme) {\n  return {\n    root: {\n      stroke: getBorderColor(theme),\n      shapeRendering: 'crispEdges'\n    }\n  };\n};\n\nvar Tick = withClassName(styles$8)(Axis.Tick);\n\nvar styles$9 = function styles(theme) {\n  var fontFamily = theme.typography.fontFamily;\n  return {\n    root: {\n      fill: theme.palette.text.secondary,\n      fontFamily: fontFamily,\n      fontSize: 12,\n      fontWeight: 400,\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n};\n\nvar Label$2 = withClassName(styles$9)(Axis.Label);\n\nvar styles$a = function styles(theme) {\n  return {\n    root: {\n      stroke: getBorderColor(theme),\n      shapeRendering: 'crispEdges'\n    }\n  };\n};\n\nvar Line = withClassName(styles$a)(Axis.Line);\n\nvar styles$b = function styles(theme) {\n  return {\n    root: {\n      stroke: getBorderColor(theme),\n      shapeRendering: 'crispEdges'\n    }\n  };\n};\n\nvar Grid = withClassName(styles$b)(Axis.Grid);\nvar ValueAxis = withComponents({\n  Root: Root$2,\n  Tick: Tick,\n  Label: Label$2,\n  Line: Line,\n  Grid: Grid\n})(ValueAxis$1);\nvar ArgumentAxis = withComponents({\n  Root: Root$2,\n  Tick: Tick,\n  Label: Label$2,\n  Line: Line,\n  Grid: Grid\n})(ArgumentAxis$1);\n\nvar styles$c = function styles(theme) {\n  var arrowSize = theme.spacing(1.2);\n  return {\n    'popper-top': {\n      zIndex: 1,\n      marginBottom: \"\".concat(arrowSize, \"px\")\n    },\n    'popper-right': {\n      zIndex: 1,\n      marginLeft: \"\".concat(arrowSize, \"px\")\n    }\n  };\n};\n\nvar popperModifiers = function popperModifiers(arrowRef) {\n  return {\n    flip: {\n      enabled: false\n    },\n    arrow: {\n      element: arrowRef\n    }\n  };\n};\n\nvar OverlayBase = function OverlayBase(_ref) {\n  var classes = _ref.classes,\n      className = _ref.className,\n      children = _ref.children,\n      target = _ref.target,\n      rotated = _ref.rotated,\n      ArrowComponent = _ref.arrowComponent,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"children\", \"target\", \"rotated\", \"arrowComponent\"]);\n\n  var _React$useState = useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      arrowRef = _React$useState2[0],\n      setArrowRef = _React$useState2[1];\n\n  var placement = rotated ? RIGHT : TOP;\n  return createElement(Popper, _extends({\n    open: true,\n    anchorEl: target,\n    placement: placement,\n    className: classNames(classes[\"popper-\".concat(placement)], className),\n    modifiers: popperModifiers(arrowRef)\n  }, restProps), children, createElement(ArrowComponent, {\n    placement: placement,\n    ref: setArrowRef\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? OverlayBase.propTypes = {\n  className: string,\n  classes: object.isRequired,\n  children: node.isRequired,\n  target: any.isRequired,\n  rotated: bool.isRequired,\n  arrowComponent: oneOfType([func, object]).isRequired\n} : void 0;\nOverlayBase.defaultProps = {\n  className: undefined\n};\nvar Overlay = withStyles(styles$c)(OverlayBase);\n\nvar styles$d = function styles(theme) {\n  return {\n    root: {\n      fontSize: 14,\n      padding: theme.spacing(0.5)\n    }\n  };\n};\n\nvar Content = withClassName(styles$d, {\n  name: 'TooltipContent'\n})(function (_ref) {\n  var text = _ref.text,\n      targetItem = _ref.targetItem,\n      restProps = _objectWithoutProperties(_ref, [\"text\", \"targetItem\"]);\n\n  return createElement(Typography, restProps, text);\n});\n\nvar styles$e = function styles(theme) {\n  var arrowSize = theme.spacing(1.2);\n  return {\n    'arrow-top': {\n      width: \"\".concat(arrowSize * 2, \"px\"),\n      height: \"\".concat(arrowSize, \"px\"),\n      position: 'absolute',\n      top: '100%',\n      overflow: 'hidden',\n      '&::after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: \"\".concat(arrowSize, \"px\"),\n        height: \"\".concat(arrowSize, \"px\"),\n        background: theme.palette.background.paper,\n        transform: 'translateX(-50%) translateY(-50%) rotate(45deg)',\n        left: '50%',\n        boxShadow: theme.shadows[2]\n      }\n    },\n    'arrow-right': {\n      width: \"\".concat(arrowSize, \"px\"),\n      height: \"\".concat(arrowSize * 2, \"px\"),\n      position: 'absolute',\n      top: '50%',\n      transform: 'translateX(-100%)',\n      overflow: 'hidden',\n      '&::after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: \"\".concat(arrowSize, \"px\"),\n        height: \"\".concat(arrowSize, \"px\"),\n        background: theme.palette.background.paper,\n        transform: 'translateX(-50%) translateY(-50%) rotate(45deg)',\n        top: '50%',\n        left: '100%',\n        boxShadow: theme.shadows[2]\n      }\n    }\n  };\n};\n\nvar BaseArrow = forwardRef(function (_ref, ref) {\n  var classes = _ref.classes,\n      className = _ref.className,\n      placement = _ref.placement,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"placement\"]);\n\n  return createElement(\"div\", _extends({\n    className: classNames(classes[\"arrow-\".concat(placement)], className),\n    ref: ref\n  }, restProps));\n});\nBaseArrow.propTypes = {\n  placement: string.isRequired,\n  classes: object.isRequired,\n  className: string\n};\nBaseArrow.defaultProps = {\n  className: undefined\n};\nvar Arrow = withStyles(styles$e)(BaseArrow);\n\nvar styles$f = function styles(theme) {\n  return {\n    root: {\n      padding: theme.spacing(0.5, 1)\n    }\n  };\n};\n\nvar Sheet = withClassName(styles$f)(function (props) {\n  return createElement(Paper, props);\n});\nvar Tooltip = withComponents({\n  Overlay: Overlay,\n  Content: Content,\n  Sheet: Sheet,\n  Arrow: Arrow\n})(Tooltip$1);\n\nvar styles$g = function styles(theme) {\n  return {\n    root: {\n      fill: theme.palette.primary.main,\n      opacity: 0.2\n    }\n  };\n};\n\nvar DragBox = withClassName(styles$g)(ZoomAndPan$1.DragBox);\nvar ZoomAndPan = withComponents({\n  DragBox: DragBox\n})(ZoomAndPan$1);\nexport { ArgumentAxis, Chart, Legend, ScatterSeries, Title, Tooltip, ValueAxis, ZoomAndPan };","map":null,"metadata":{},"sourceType":"module"}