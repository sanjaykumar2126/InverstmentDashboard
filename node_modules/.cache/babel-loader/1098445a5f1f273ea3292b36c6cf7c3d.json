{"ast":null,"code":"import isFunction from './is-function';\nvar OBJECT = \"object\";\nvar UNDEFINED = \"undefined\";\n\nfunction deepExtendOne(destination, source) {\n  for (var property in source) {\n    var propValue = source[property];\n    var propType = typeof propValue;\n    var propInit = void 0;\n\n    if (propType === OBJECT && propValue !== null) {\n      propInit = propValue.constructor;\n    } else {\n      propInit = null;\n    }\n\n    if (propInit && propInit !== Array) {\n      if (propValue instanceof Date) {\n        destination[property] = new Date(propValue.getTime());\n      } else if (isFunction(propValue.clone)) {\n        destination[property] = propValue.clone();\n      } else {\n        var destProp = destination[property];\n\n        if (typeof destProp === OBJECT) {\n          destination[property] = destProp || {};\n        } else {\n          destination[property] = {};\n        }\n\n        deepExtendOne(destination[property], propValue);\n      }\n    } else if (propType !== UNDEFINED) {\n      destination[property] = propValue;\n    }\n  }\n\n  return destination;\n}\n\nexport default function deepExtend(destination) {\n  var arguments$1 = arguments;\n  var length = arguments.length;\n\n  for (var i = 1; i < length; i++) {\n    deepExtendOne(destination, arguments$1[i]);\n  }\n\n  return destination;\n}","map":null,"metadata":{},"sourceType":"module"}