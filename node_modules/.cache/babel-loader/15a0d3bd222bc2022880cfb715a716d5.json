{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n\nvar SmithchartFont =\n/** @class */\nfunction (_super) {\n  __extends(SmithchartFont, _super);\n\n  function SmithchartFont() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Segoe UI')], SmithchartFont.prototype, \"fontFamily\", void 0);\n\n  __decorate([Property('Normal')], SmithchartFont.prototype, \"fontStyle\", void 0);\n\n  __decorate([Property('Regular')], SmithchartFont.prototype, \"fontWeight\", void 0);\n\n  __decorate([Property('')], SmithchartFont.prototype, \"color\", void 0);\n\n  __decorate([Property('12px')], SmithchartFont.prototype, \"size\", void 0);\n\n  __decorate([Property(1)], SmithchartFont.prototype, \"opacity\", void 0);\n\n  return SmithchartFont;\n}(ChildProperty);\n\nexport { SmithchartFont };\n\nvar SmithchartMargin =\n/** @class */\nfunction (_super) {\n  __extends(SmithchartMargin, _super);\n\n  function SmithchartMargin() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(10)], SmithchartMargin.prototype, \"top\", void 0);\n\n  __decorate([Property(10)], SmithchartMargin.prototype, \"bottom\", void 0);\n\n  __decorate([Property(10)], SmithchartMargin.prototype, \"right\", void 0);\n\n  __decorate([Property(10)], SmithchartMargin.prototype, \"left\", void 0);\n\n  return SmithchartMargin;\n}(ChildProperty);\n\nexport { SmithchartMargin };\n\nvar SmithchartBorder =\n/** @class */\nfunction (_super) {\n  __extends(SmithchartBorder, _super);\n\n  function SmithchartBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(0)], SmithchartBorder.prototype, \"width\", void 0);\n\n  __decorate([Property(1)], SmithchartBorder.prototype, \"opacity\", void 0);\n\n  __decorate([Property('transparent')], SmithchartBorder.prototype, \"color\", void 0);\n\n  return SmithchartBorder;\n}(ChildProperty);\n\nexport { SmithchartBorder };\n/**\n * Internal use of type rect\n */\n\nvar SmithchartRect =\n/** @class */\nfunction () {\n  function SmithchartRect(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  return SmithchartRect;\n}();\n\nexport { SmithchartRect };\n\nvar LabelCollection =\n/** @class */\nfunction () {\n  function LabelCollection() {}\n\n  return LabelCollection;\n}();\n\nexport { LabelCollection };\n\nvar LegendSeries =\n/** @class */\nfunction () {\n  function LegendSeries() {}\n\n  return LegendSeries;\n}();\n\nexport { LegendSeries };\n\nvar LabelRegion =\n/** @class */\nfunction () {\n  function LabelRegion() {}\n\n  return LabelRegion;\n}();\n\nexport { LabelRegion };\n\nvar HorizontalLabelCollection =\n/** @class */\nfunction (_super) {\n  __extends(HorizontalLabelCollection, _super);\n\n  function HorizontalLabelCollection() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return HorizontalLabelCollection;\n}(LabelCollection);\n\nexport { HorizontalLabelCollection };\n\nvar RadialLabelCollections =\n/** @class */\nfunction (_super) {\n  __extends(RadialLabelCollections, _super);\n\n  function RadialLabelCollections() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return RadialLabelCollections;\n}(HorizontalLabelCollection);\n\nexport { RadialLabelCollections };\n\nvar LineSegment =\n/** @class */\nfunction () {\n  function LineSegment() {}\n\n  return LineSegment;\n}();\n\nexport { LineSegment };\n\nvar PointRegion =\n/** @class */\nfunction () {\n  function PointRegion() {}\n\n  return PointRegion;\n}();\n\nexport { PointRegion };\n/**\n * Smithchart internal class for point\n */\n\nvar Point =\n/** @class */\nfunction () {\n  function Point() {}\n\n  return Point;\n}();\n\nexport { Point };\n\nvar ClosestPoint =\n/** @class */\nfunction () {\n  function ClosestPoint() {}\n\n  return ClosestPoint;\n}();\n\nexport { ClosestPoint };\n\nvar MarkerOptions =\n/** @class */\nfunction () {\n  function MarkerOptions(id, fill, borderColor, borderWidth, opacity) {\n    this.id = id;\n    this.fill = fill;\n    this.borderColor = borderColor;\n    this.borderWidth = borderWidth;\n    this.opacity = opacity;\n  }\n\n  return MarkerOptions;\n}();\n\nexport { MarkerOptions };\n\nvar SmithchartLabelPosition =\n/** @class */\nfunction () {\n  function SmithchartLabelPosition() {}\n\n  return SmithchartLabelPosition;\n}();\n\nexport { SmithchartLabelPosition };\n\nvar Direction =\n/** @class */\nfunction () {\n  function Direction() {\n    this.counterclockwise = 0;\n    this.clockwise = 1;\n  }\n\n  return Direction;\n}();\n\nexport { Direction };\n\nvar DataLabelTextOptions =\n/** @class */\nfunction () {\n  function DataLabelTextOptions() {}\n\n  return DataLabelTextOptions;\n}();\n\nexport { DataLabelTextOptions };\n\nvar LabelOption =\n/** @class */\nfunction () {\n  function LabelOption() {}\n\n  return LabelOption;\n}();\n\nexport { LabelOption };\n/** @private */\n\nvar SmithchartSize =\n/** @class */\nfunction () {\n  function SmithchartSize(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  return SmithchartSize;\n}();\n\nexport { SmithchartSize };\n\nvar GridArcPoints =\n/** @class */\nfunction () {\n  function GridArcPoints() {}\n\n  return GridArcPoints;\n}();\n\nexport { GridArcPoints };","map":null,"metadata":{},"sourceType":"module"}