{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport ChartElement from './chart-element';\nimport Box from './box';\nimport { DEFAULT_FONT, BLACK } from '../common/constants';\nimport { setDefaultOptions } from '../common';\nvar DrawingText = draw.Text;\n\nvar Text = function (ChartElement) {\n  function Text(content, options) {\n    ChartElement.call(this, options);\n    this.content = content; // Calculate size\n\n    this.reflow(new Box());\n  }\n\n  if (ChartElement) Text.__proto__ = ChartElement;\n  Text.prototype = Object.create(ChartElement && ChartElement.prototype);\n  Text.prototype.constructor = Text;\n\n  Text.prototype.reflow = function reflow(targetBox) {\n    var options = this.options;\n    var size = options.size = draw.util.measureText(this.content, {\n      font: options.font\n    });\n    this.baseline = size.baseline;\n    this.box = new Box(targetBox.x1, targetBox.y1, targetBox.x1 + size.width, targetBox.y1 + size.height);\n  };\n\n  Text.prototype.createVisual = function createVisual() {\n    var ref = this.options;\n    var font = ref.font;\n    var color = ref.color;\n    var opacity = ref.opacity;\n    var cursor = ref.cursor;\n    this.visual = new DrawingText(this.content, this.box.toRect().topLeft(), {\n      font: font,\n      fill: {\n        color: color,\n        opacity: opacity\n      },\n      cursor: cursor\n    });\n  };\n\n  return Text;\n}(ChartElement);\n\nsetDefaultOptions(Text, {\n  font: DEFAULT_FONT,\n  color: BLACK\n});\nexport default Text;","map":null,"metadata":{},"sourceType":"module"}