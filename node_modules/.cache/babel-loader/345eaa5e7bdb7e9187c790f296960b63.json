{"ast":null,"code":"/**\n * Render range navigator for financial chart\n */\nimport { RangeNavigator, getElement } from '../../index';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Size } from '@syncfusion/ej2-svg-base';\n/** @private */\n\nvar RangeSelector =\n/** @class */\nfunction () {\n  function RangeSelector(stockChart) {\n    this.stockChart = stockChart;\n  }\n\n  RangeSelector.prototype.initializeRangeNavigator = function () {\n    var _this = this;\n\n    var stockChart = this.stockChart;\n\n    if (!stockChart.selectorObject) {\n      stockChart.selectorObject = stockChart.renderer.createGroup({\n        id: stockChart.element.id + '_stockChart_rangeSelector',\n        transform: 'translate(' + 0 + ',' + stockChart.cartesianChart.cartesianChartSize.height + ')'\n      });\n      stockChart.mainObject.appendChild(stockChart.selectorObject);\n    } else {\n      var chartElement = document.getElementById(stockChart.selectorObject.id);\n\n      while (chartElement.firstChild) {\n        chartElement.removeChild(chartElement.firstChild);\n      }\n\n      if (getElement(stockChart.selectorObject.id + '_leftTooltip')) {\n        remove(getElement(stockChart.selectorObject.id + '_leftTooltip'));\n      }\n\n      if (getElement(stockChart.selectorObject.id + '_rightTooltip')) {\n        remove(getElement(stockChart.selectorObject.id + '_rightTooltip'));\n      }\n    }\n\n    stockChart.rangeNavigator = new RangeNavigator({\n      locale: 'en',\n      valueType: stockChart.primaryXAxis.valueType,\n      theme: this.stockChart.theme,\n      series: this.findSeriesCollection(stockChart.series),\n      height: this.calculateChartSize().height.toString(),\n      value: [new Date(stockChart.startValue), new Date(stockChart.endValue)],\n      margin: this.findMargin(stockChart),\n      tooltip: {\n        enable: stockChart.tooltip.enable,\n        displayMode: 'Always'\n      },\n      dataSource: stockChart.dataSource,\n      changed: function (args) {\n        var arg = {\n          name: 'rangeChange',\n          end: args.end,\n          selectedData: args.selectedData,\n          start: args.start,\n          zoomFactor: args.zoomFactor,\n          zoomPosition: args.zoomPosition,\n          data: undefined\n        };\n\n        _this.stockChart.trigger('rangeChange', arg);\n\n        _this.stockChart.startValue = args.start;\n        _this.stockChart.endValue = args.end;\n\n        if (!_this.stockChart.zoomChange) {\n          _this.stockChart.cartesianChart.cartesianChartRefresh(_this.stockChart, args.start, args.end, arg.data);\n        }\n\n        if (stockChart.periodSelector && stockChart.periodSelector.datePicker) {\n          stockChart.periodSelector.datePicker.startDate = new Date(args.start);\n          stockChart.periodSelector.datePicker.endDate = new Date(args.end);\n          stockChart.periodSelector.datePicker.dataBind();\n        }\n      }\n    });\n    stockChart.rangeNavigator.stockChart = stockChart;\n    stockChart.rangeNavigator.appendTo(stockChart.selectorObject);\n  };\n\n  RangeSelector.prototype.findMargin = function (stockChart) {\n    var margin = {};\n    margin.top = 5;\n    margin.left = 0;\n    margin.right = 0;\n    margin.bottom = 0;\n    return margin;\n  };\n\n  RangeSelector.prototype.findSeriesCollection = function (series) {\n    var chartSeries = [];\n\n    for (var i = 0, len = series.length; i < len; i++) {\n      chartSeries.push(series[i]);\n      chartSeries[i].xName = series[i].xName;\n      chartSeries[i].yName = series[i].yName === '' ? series[i].close : series[i].yName;\n    }\n\n    return chartSeries;\n  };\n\n  RangeSelector.prototype.calculateChartSize = function () {\n    var stockChart = this.stockChart;\n    return new Size(stockChart.availableSize.width, stockChart.enableSelector ? 80 : 0);\n  };\n  /**\n   * Performs slider change\n   * @param start\n   * @param end\n   */\n\n\n  RangeSelector.prototype.sliderChange = function (start, end) {\n    this.stockChart.rangeNavigator.rangeSlider.performAnimation(start, end, this.stockChart.rangeNavigator, 0);\n  };\n\n  return RangeSelector;\n}();\n\nexport { RangeSelector };","map":null,"metadata":{},"sourceType":"module"}