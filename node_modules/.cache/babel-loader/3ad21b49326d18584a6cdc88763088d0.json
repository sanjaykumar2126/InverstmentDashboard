{"ast":null,"code":"import RadarLineChart from '../radar-line-chart/radar-line-chart';\nimport SplineRadarAreaSegment from './spline-radar-area-segment';\nimport RadarAreaSegment from './radar-area-segment';\nimport { SMOOTH, ZERO } from '../constants';\n\nvar RadarAreaChart = function (RadarLineChart) {\n  function RadarAreaChart() {\n    RadarLineChart.apply(this, arguments);\n  }\n\n  if (RadarLineChart) RadarAreaChart.__proto__ = RadarLineChart;\n  RadarAreaChart.prototype = Object.create(RadarLineChart && RadarLineChart.prototype);\n  RadarAreaChart.prototype.constructor = RadarAreaChart;\n\n  RadarAreaChart.prototype.createSegment = function createSegment(linePoints, currentSeries, seriesIx, prevSegment) {\n    var isStacked = this.options.isStacked;\n    var style = (currentSeries.line || {}).style;\n    var previousSegment;\n    var stackPoints;\n    var segment;\n\n    if (isStacked && seriesIx > 0 && prevSegment) {\n      stackPoints = prevSegment.linePoints.slice(0);\n      previousSegment = prevSegment;\n    }\n\n    if (style === SMOOTH) {\n      segment = new SplineRadarAreaSegment(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n      segment.options.closed = true;\n    } else {\n      linePoints.push(linePoints[0]);\n      segment = new RadarAreaSegment(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n    }\n\n    return segment;\n  };\n\n  RadarAreaChart.prototype.seriesMissingValues = function seriesMissingValues(series) {\n    return series.missingValues || ZERO;\n  };\n\n  return RadarAreaChart;\n}(RadarLineChart);\n\nexport default RadarAreaChart;","map":null,"metadata":{},"sourceType":"module"}