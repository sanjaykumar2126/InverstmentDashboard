{"ast":null,"code":"import BarChart from '../bar-chart/bar-chart';\nimport RangeBar from './range-bar';\nimport CategoricalChart from '../categorical-chart';\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { isNumber } from '../../common';\n\nvar RangeBarChart = function (BarChart) {\n  function RangeBarChart() {\n    BarChart.apply(this, arguments);\n  }\n\n  if (BarChart) RangeBarChart.__proto__ = BarChart;\n  RangeBarChart.prototype = Object.create(BarChart && BarChart.prototype);\n  RangeBarChart.prototype.constructor = RangeBarChart;\n\n  RangeBarChart.prototype.pointType = function pointType() {\n    return RangeBar;\n  };\n\n  RangeBarChart.prototype.pointValue = function pointValue(data) {\n    return data.valueFields;\n  };\n\n  RangeBarChart.prototype.formatPointValue = function formatPointValue(point, format) {\n    if (point.value.from === null && point.value.to === null) {\n      return \"\";\n    }\n\n    return this.chartService.format.auto(format, point.value.from, point.value.to);\n  };\n\n  RangeBarChart.prototype.plotRange = function plotRange(point) {\n    if (!point) {\n      return 0;\n    }\n\n    return [point.value.from, point.value.to];\n  };\n\n  RangeBarChart.prototype.updateRange = function updateRange(value, fields) {\n    var axisName = fields.series.axis;\n    var from = value.from;\n    var to = value.to;\n    var axisRange = this.valueAxisRanges[axisName];\n\n    if (value !== null && isNumber(from) && isNumber(to)) {\n      axisRange = this.valueAxisRanges[axisName] = axisRange || {\n        min: MAX_VALUE,\n        max: MIN_VALUE\n      };\n      axisRange.min = Math.min(axisRange.min, from);\n      axisRange.max = Math.max(axisRange.max, from);\n      axisRange.min = Math.min(axisRange.min, to);\n      axisRange.max = Math.max(axisRange.max, to);\n    }\n  };\n\n  RangeBarChart.prototype.aboveAxis = function aboveAxis(point) {\n    var value = point.value;\n    return value.from < value.to;\n  };\n\n  return RangeBarChart;\n}(BarChart);\n\nRangeBarChart.prototype.plotLimits = CategoricalChart.prototype.plotLimits;\nexport default RangeBarChart;","map":null,"metadata":{},"sourceType":"module"}