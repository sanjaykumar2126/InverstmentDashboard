{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `SegmentDirective` directive represent a segment of the react chart.\n * It must be contained in a Chart component(`ChartComponent`).\n * ```tsx\n * <ChartComponent>\n * <SeriesCollectionDirective>\n * <SeriesDirective>\n * <SegmentsDirective>\n * <SegmentDirective></SegmentDirective>\n * </SegmentsDirective>\n * </SeriesDirective>\n * </SeriesCollectionDirective>\n * </ChartComponent>\n * ```\n */\n\nvar SegmentDirective =\n/** @class */\nfunction (_super) {\n  __extends(SegmentDirective, _super);\n\n  function SegmentDirective() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SegmentDirective.moduleName = 'segment';\n  return SegmentDirective;\n}(ComplexBase);\n\nexport { SegmentDirective };\n\nvar SegmentsDirective =\n/** @class */\nfunction (_super) {\n  __extends(SegmentsDirective, _super);\n\n  function SegmentsDirective() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SegmentsDirective.propertyName = 'segments';\n  SegmentsDirective.moduleName = 'segments';\n  return SegmentsDirective;\n}(ComplexBase);\n\nexport { SegmentsDirective };","map":null,"metadata":{},"sourceType":"module"}