{"ast":null,"code":"import BaseTooltip from './base-tooltip';\nimport { deepExtend } from '../../common';\n\nvar Tooltip = function (BaseTooltip) {\n  function Tooltip() {\n    BaseTooltip.apply(this, arguments);\n  }\n\n  if (BaseTooltip) Tooltip.__proto__ = BaseTooltip;\n  Tooltip.prototype = Object.create(BaseTooltip && BaseTooltip.prototype);\n  Tooltip.prototype.constructor = Tooltip;\n\n  Tooltip.prototype.show = function show(point) {\n    if (!point || !point.tooltipAnchor || this._current && this._current === point) {\n      return;\n    }\n\n    var options = deepExtend({}, this.options, point.options.tooltip);\n    var anchor = point.tooltipAnchor();\n\n    if (anchor) {\n      this._current = point;\n      BaseTooltip.prototype.show.call(this, {\n        point: point,\n        anchor: anchor\n      }, options, point);\n    } else {\n      this.hide();\n    }\n  };\n\n  Tooltip.prototype.hide = function hide() {\n    delete this._current;\n    BaseTooltip.prototype.hide.call(this);\n  };\n\n  return Tooltip;\n}(BaseTooltip);\n\nexport default Tooltip;","map":null,"metadata":{},"sourceType":"module"}