{"ast":null,"code":"import Box from '../box';\nimport { grep } from '../../common';\nexport default function boxDiff(r, s) {\n  if (r.x1 === s.x1 && r.y1 === s.y1 && r.x2 === s.x2 && r.y2 === s.y2) {\n    return s;\n  }\n\n  var a = Math.min(r.x1, s.x1);\n  var b = Math.max(r.x1, s.x1);\n  var c = Math.min(r.x2, s.x2);\n  var d = Math.max(r.x2, s.x2);\n  var e = Math.min(r.y1, s.y1);\n  var f = Math.max(r.y1, s.y1);\n  var g = Math.min(r.y2, s.y2);\n  var h = Math.max(r.y2, s.y2);\n  var boxes = []; // X = intersection, 0-7 = possible difference areas\n  // h +-+-+-+\n  // . |5|6|7|\n  // g +-+-+-+\n  // . |3|X|4|\n  // f +-+-+-+\n  // . |0|1|2|\n  // e +-+-+-+\n  // . a b c d\n  // we'll always have rectangles 1, 3, 4 and 6\n\n  boxes[0] = new Box(b, e, c, f);\n  boxes[1] = new Box(a, f, b, g);\n  boxes[2] = new Box(c, f, d, g);\n  boxes[3] = new Box(b, g, c, h); // decide which corners\n\n  if (r.x1 === a && r.y1 === e || s.x1 === a && s.y1 === e) {\n    // corners 0 and 7\n    boxes[4] = new Box(a, e, b, f);\n    boxes[5] = new Box(c, g, d, h);\n  } else {\n    // corners 2 and 5\n    boxes[4] = new Box(c, e, d, f);\n    boxes[5] = new Box(a, g, b, h);\n  }\n\n  return grep(boxes, function (box) {\n    return box.height() > 0 && box.width() > 0;\n  })[0];\n}","map":null,"metadata":{},"sourceType":"module"}