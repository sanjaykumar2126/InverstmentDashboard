{"ast":null,"code":"import SplineAreaSegment from '../area-chart/spline-area-segment';\nimport { CurveProcessor } from '../../core';\n\nvar SplinePolarAreaSegment = function (SplineAreaSegment) {\n  function SplinePolarAreaSegment() {\n    SplineAreaSegment.apply(this, arguments);\n  }\n\n  if (SplineAreaSegment) SplinePolarAreaSegment.__proto__ = SplineAreaSegment;\n  SplinePolarAreaSegment.prototype = Object.create(SplineAreaSegment && SplineAreaSegment.prototype);\n  SplinePolarAreaSegment.prototype.constructor = SplinePolarAreaSegment;\n\n  SplinePolarAreaSegment.prototype.fillToAxes = function fillToAxes(fillPath) {\n    var center = this._polarAxisCenter();\n\n    fillPath.lineTo(center.x, center.y);\n  };\n\n  SplinePolarAreaSegment.prototype._polarAxisCenter = function _polarAxisCenter() {\n    var polarAxis = this.parent.plotArea.polarAxis;\n    var center = polarAxis.box.center();\n    return center;\n  };\n\n  SplinePolarAreaSegment.prototype.strokeSegments = function strokeSegments() {\n    var segments = this._strokeSegments;\n\n    if (!segments) {\n      var center = this._polarAxisCenter();\n\n      var curveProcessor = new CurveProcessor(false);\n      var linePoints = this.points();\n      linePoints.push(center);\n      segments = this._strokeSegments = curveProcessor.process(linePoints);\n      segments.pop();\n    }\n\n    return segments;\n  };\n\n  return SplinePolarAreaSegment;\n}(SplineAreaSegment);\n\nexport default SplinePolarAreaSegment;","map":null,"metadata":{},"sourceType":"module"}