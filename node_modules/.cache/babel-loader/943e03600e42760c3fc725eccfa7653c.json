{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport AreaSegment from '../area-chart/area-segment';\n\nvar RangeAreaSegment = function (AreaSegment) {\n  function RangeAreaSegment() {\n    AreaSegment.apply(this, arguments);\n  }\n\n  if (AreaSegment) RangeAreaSegment.__proto__ = AreaSegment;\n  RangeAreaSegment.prototype = Object.create(AreaSegment && AreaSegment.prototype);\n  RangeAreaSegment.prototype.constructor = RangeAreaSegment;\n\n  RangeAreaSegment.prototype.createStrokeSegments = function createStrokeSegments() {\n    return this.segmentsFromPoints(this.toGeometryPoints(this.toPoints()));\n  };\n\n  RangeAreaSegment.prototype.stackSegments = function stackSegments() {\n    var fromSegments = this.fromSegments;\n\n    if (!this.fromSegments) {\n      fromSegments = this.fromSegments = this.segmentsFromPoints(this.toGeometryPoints(this.fromPoints().reverse()));\n    }\n\n    return fromSegments;\n  };\n\n  RangeAreaSegment.prototype.createStroke = function createStroke(style) {\n    var toPath = new draw.Path(style);\n    var fromPath = new draw.Path(style);\n    toPath.segments.push.apply(toPath.segments, this.strokeSegments());\n    fromPath.segments.push.apply(fromPath.segments, this.stackSegments());\n    this.visual.append(toPath);\n    this.visual.append(fromPath);\n  };\n\n  RangeAreaSegment.prototype.hasStackSegment = function hasStackSegment() {\n    return true;\n  };\n\n  RangeAreaSegment.prototype.fromPoints = function fromPoints() {\n    return this.linePoints.map(function (point) {\n      return point.fromPoint;\n    });\n  };\n\n  RangeAreaSegment.prototype.toPoints = function toPoints() {\n    return this.linePoints.map(function (point) {\n      return point.toPoint;\n    });\n  };\n\n  return RangeAreaSegment;\n}(AreaSegment);\n\nexport default RangeAreaSegment;","map":null,"metadata":{},"sourceType":"module"}