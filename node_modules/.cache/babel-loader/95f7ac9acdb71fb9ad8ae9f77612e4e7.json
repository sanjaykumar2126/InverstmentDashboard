{"ast":null,"code":"import { Class } from '../common';\n\nvar Highlight = function (Class) {\n  function Highlight() {\n    Class.call(this);\n    this._points = [];\n  }\n\n  if (Class) Highlight.__proto__ = Class;\n  Highlight.prototype = Object.create(Class && Class.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.destroy = function destroy() {\n    this._points = [];\n  };\n\n  Highlight.prototype.show = function show(points) {\n    var this$1 = this;\n    var arrayPoints = [].concat(points);\n    this.hide();\n\n    for (var i = 0; i < arrayPoints.length; i++) {\n      var point = arrayPoints[i];\n\n      if (point && point.toggleHighlight && point.hasHighlight()) {\n        this$1.togglePointHighlight(point, true);\n\n        this$1._points.push(point);\n      }\n    }\n  };\n\n  Highlight.prototype.togglePointHighlight = function togglePointHighlight(point, show) {\n    var toggleHandler = (point.options.highlight || {}).toggle;\n\n    if (toggleHandler) {\n      var eventArgs = {\n        category: point.category,\n        series: point.series,\n        dataItem: point.dataItem,\n        value: point.value,\n        stackValue: point.stackValue,\n        preventDefault: preventDefault,\n        visual: point.highlightVisual(),\n        show: show\n      };\n      toggleHandler(eventArgs);\n\n      if (!eventArgs._defaultPrevented) {\n        point.toggleHighlight(show);\n      }\n    } else {\n      point.toggleHighlight(show);\n    }\n  };\n\n  Highlight.prototype.hide = function hide() {\n    var this$1 = this;\n    var points = this._points;\n\n    while (points.length) {\n      this$1.togglePointHighlight(points.pop(), false);\n    }\n  };\n\n  Highlight.prototype.isHighlighted = function isHighlighted(element) {\n    var points = this._points;\n\n    for (var i = 0; i < points.length; i++) {\n      var point = points[i];\n\n      if (element === point) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  return Highlight;\n}(Class);\n\nfunction preventDefault() {\n  this._defaultPrevented = true;\n}\n\nexport default Highlight;","map":null,"metadata":{},"sourceType":"module"}