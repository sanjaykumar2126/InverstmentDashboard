{"ast":null,"code":"import { logToConsole } from '../drawing-utils';\n\nvar FontLoader = function FontLoader() {};\n\nFontLoader.fetchFonts = function fetchFonts(options, fonts, state) {\n  if (state === void 0) state = {\n    depth: 0\n  };\n  var MAX_DEPTH = 5;\n\n  if (!options || state.depth > MAX_DEPTH || !document.fonts) {\n    return;\n  }\n\n  Object.keys(options).forEach(function (key) {\n    var value = options[key];\n\n    if (key === \"dataSource\" || key[0] === \"$\" || !value) {\n      return;\n    }\n\n    if (key === \"font\") {\n      fonts.push(value);\n    } else if (typeof value === \"object\") {\n      state.depth++;\n      FontLoader.fetchFonts(value, fonts, state);\n      state.depth--;\n    }\n  });\n};\n\nFontLoader.loadFonts = function loadFonts(fonts, callback) {\n  var promises = [];\n\n  if (fonts.length > 0 && document.fonts) {\n    try {\n      promises = fonts.map(function (font) {\n        return document.fonts.load(font);\n      });\n    } catch (e) {\n      // Silence font-loading errors\n      logToConsole(e);\n    }\n\n    Promise.all(promises).then(callback, callback);\n  } else {\n    callback();\n  }\n};\n\nFontLoader.preloadFonts = function preloadFonts(options, callback) {\n  var fonts = [];\n  FontLoader.fetchFonts(options, fonts);\n  FontLoader.loadFonts(fonts, callback);\n};\n\nexport default FontLoader;","map":null,"metadata":{},"sourceType":"module"}