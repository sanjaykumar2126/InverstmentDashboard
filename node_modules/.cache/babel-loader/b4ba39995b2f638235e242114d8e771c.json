{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { withInRange } from '../../common/utils/helper';\nimport { ColumnBase } from './column-base';\n/**\n * `RangeColumnSeries` module is used to render the range column series.\n */\n\nvar RangeColumnSeries =\n/** @class */\nfunction (_super) {\n  __extends(RangeColumnSeries, _super);\n\n  function RangeColumnSeries() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Render Range Column series.\n   * @return {void}\n   * @private\n   */\n\n\n  RangeColumnSeries.prototype.render = function (series) {\n    var rect;\n    var sideBySideInfo = this.getSideBySideInfo(series); //let origin: number = Math.max(<number>series.yAxis.visibleRange.min, 0);\n\n    var argsData;\n\n    for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n      var rangePoint = _a[_i];\n      rangePoint.symbolLocations = [];\n      rangePoint.regions = [];\n\n      if (rangePoint.visible && withInRange(series.points[rangePoint.index - 1], rangePoint, series.points[rangePoint.index + 1], series)) {\n        rect = this.getRectangle(rangePoint.xValue + sideBySideInfo.start, rangePoint.high, rangePoint.xValue + sideBySideInfo.end, rangePoint.low, series);\n        argsData = this.triggerEvent(series, rangePoint, series.interior, {\n          width: series.border.width,\n          color: series.border.color\n        });\n\n        if (!argsData.cancel) {\n          this.updateSymbolLocation(rangePoint, rect, series);\n          this.drawRectangle(series, rangePoint, rect, argsData);\n        }\n      }\n    }\n\n    this.renderMarker(series);\n  };\n  /**\n   * Get module name.\n   */\n\n\n  RangeColumnSeries.prototype.getModuleName = function () {\n    return 'RangeColumnSeries';\n    /**\n     * return the module name\n     */\n  };\n  /**\n   * Animates the series.\n   * @param  {Series} series - Defines the series to animate.\n   * @return {void}\n   */\n\n\n  RangeColumnSeries.prototype.doAnimation = function (series) {\n    this.animate(series);\n  };\n  /**\n   * To destroy the range column series.\n   * @return {void}\n   * @private\n   */\n\n\n  RangeColumnSeries.prototype.destroy = function (chart) {\n    /**\n     * Destroy method performed here\n     */\n  };\n\n  return RangeColumnSeries;\n}(ColumnBase);\n\nexport { RangeColumnSeries };","map":null,"metadata":{},"sourceType":"module"}