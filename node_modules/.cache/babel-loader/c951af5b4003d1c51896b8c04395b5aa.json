{"ast":null,"code":"import { geometry, drawing } from '@progress/kendo-drawing';\nimport { interpolateValue, setDefaultOptions } from '../../common';\nimport { ANGULAR_SPEED, LINEAR, RADIAL_POINTER } from '../constants';\n\nvar RadialPointerAnimation = function (superclass) {\n  function RadialPointerAnimation(element, options) {\n    superclass.call(this, element, options);\n    var animationOptions = this.options;\n    animationOptions.duration = Math.max(Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration * 1000, 1);\n  }\n\n  if (superclass) RadialPointerAnimation.__proto__ = superclass;\n  RadialPointerAnimation.prototype = Object.create(superclass && superclass.prototype);\n  RadialPointerAnimation.prototype.constructor = RadialPointerAnimation;\n\n  RadialPointerAnimation.prototype.step = function step(pos) {\n    var options = this.options;\n    var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n    this.element.transform(geometry.transform().rotate(angle, options.center));\n  };\n\n  return RadialPointerAnimation;\n}(drawing.Animation);\n\nsetDefaultOptions(RadialPointerAnimation, {\n  easing: LINEAR,\n  duration: ANGULAR_SPEED\n});\ndrawing.AnimationFactory.current.register(RADIAL_POINTER, RadialPointerAnimation);\nexport default RadialPointerAnimation;","map":null,"metadata":{},"sourceType":"module"}