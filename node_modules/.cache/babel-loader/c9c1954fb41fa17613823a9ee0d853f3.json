{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport LineSegment from './line-segment';\nimport { CurveProcessor } from '../../core';\nimport { isFunction } from '../../common';\n\nvar SplineSegment = function (LineSegment) {\n  function SplineSegment() {\n    LineSegment.apply(this, arguments);\n  }\n\n  if (LineSegment) SplineSegment.__proto__ = LineSegment;\n  SplineSegment.prototype = Object.create(LineSegment && LineSegment.prototype);\n  SplineSegment.prototype.constructor = SplineSegment;\n\n  SplineSegment.prototype.segmentVisual = function segmentVisual() {\n    var series = this.series;\n    var defaults = series._defaults;\n    var color = series.color;\n\n    if (isFunction(color) && defaults) {\n      color = defaults.color;\n    }\n\n    var curveProcessor = new CurveProcessor(this.options.closed);\n    var segments = curveProcessor.process(this.points());\n    var curve = new draw.Path({\n      stroke: {\n        color: color,\n        width: series.width,\n        opacity: series.opacity,\n        dashType: series.dashType\n      },\n      zIndex: series.zIndex\n    });\n    curve.segments.push.apply(curve.segments, segments);\n    this.visual = curve;\n  };\n\n  return SplineSegment;\n}(LineSegment);\n\nexport default SplineSegment;","map":null,"metadata":{},"sourceType":"module"}