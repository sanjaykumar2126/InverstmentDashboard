{"ast":null,"code":"import filterSeriesByType from '../utils/filter-series-by-type';\nimport { Class } from '../../common';\n\nvar PlotAreaFactory = function (Class) {\n  function PlotAreaFactory() {\n    Class.call(this);\n    this._registry = [];\n  }\n\n  if (Class) PlotAreaFactory.__proto__ = Class;\n  PlotAreaFactory.prototype = Object.create(Class && Class.prototype);\n  PlotAreaFactory.prototype.constructor = PlotAreaFactory;\n\n  PlotAreaFactory.prototype.register = function register(type, seriesTypes) {\n    this._registry.push({\n      type: type,\n      seriesTypes: seriesTypes\n    });\n  };\n\n  PlotAreaFactory.prototype.create = function create(srcSeries, options, chartService) {\n    var registry = this._registry;\n    var match = registry[0];\n    var series;\n\n    for (var idx = 0; idx < registry.length; idx++) {\n      var entry = registry[idx];\n      series = filterSeriesByType(srcSeries, entry.seriesTypes);\n\n      if (series.length > 0) {\n        match = entry;\n        break;\n      }\n    }\n\n    return new match.type(series, options, chartService);\n  };\n\n  return PlotAreaFactory;\n}(Class);\n\nPlotAreaFactory.current = new PlotAreaFactory();\nexport default PlotAreaFactory;","map":null,"metadata":{},"sourceType":"module"}