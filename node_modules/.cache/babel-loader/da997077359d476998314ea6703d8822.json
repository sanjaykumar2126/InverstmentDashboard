{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { ChildProperty, Property, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from '../../common/model/theme';\nimport { Font, Border } from '../../common/model/base';\n/**\n * Configures the Annotation for chart.\n */\n\nvar ChartAnnotationSettings =\n/** @class */\nfunction (_super) {\n  __extends(ChartAnnotationSettings, _super);\n\n  function ChartAnnotationSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('0')], ChartAnnotationSettings.prototype, \"x\", void 0);\n\n  __decorate([Property('0')], ChartAnnotationSettings.prototype, \"y\", void 0);\n\n  __decorate([Property(null)], ChartAnnotationSettings.prototype, \"content\", void 0);\n\n  __decorate([Property('Center')], ChartAnnotationSettings.prototype, \"horizontalAlignment\", void 0);\n\n  __decorate([Property('Pixel')], ChartAnnotationSettings.prototype, \"coordinateUnits\", void 0);\n\n  __decorate([Property('Chart')], ChartAnnotationSettings.prototype, \"region\", void 0);\n\n  __decorate([Property('Middle')], ChartAnnotationSettings.prototype, \"verticalAlignment\", void 0);\n\n  __decorate([Property(null)], ChartAnnotationSettings.prototype, \"xAxisName\", void 0);\n\n  __decorate([Property(null)], ChartAnnotationSettings.prototype, \"yAxisName\", void 0);\n\n  __decorate([Property(null)], ChartAnnotationSettings.prototype, \"description\", void 0);\n\n  return ChartAnnotationSettings;\n}(ChildProperty);\n\nexport { ChartAnnotationSettings };\n/**\n * label border properties.\n */\n\nvar LabelBorder =\n/** @class */\nfunction (_super) {\n  __extends(LabelBorder, _super);\n\n  function LabelBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('')], LabelBorder.prototype, \"color\", void 0);\n\n  __decorate([Property(1)], LabelBorder.prototype, \"width\", void 0);\n\n  __decorate([Property('Rectangle')], LabelBorder.prototype, \"type\", void 0);\n\n  return LabelBorder;\n}(ChildProperty);\n\nexport { LabelBorder };\n/**\n * categories for multi level labels\n */\n\nvar MultiLevelCategories =\n/** @class */\nfunction (_super) {\n  __extends(MultiLevelCategories, _super);\n\n  function MultiLevelCategories() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(null)], MultiLevelCategories.prototype, \"start\", void 0);\n\n  __decorate([Property(null)], MultiLevelCategories.prototype, \"end\", void 0);\n\n  __decorate([Property('')], MultiLevelCategories.prototype, \"text\", void 0);\n\n  __decorate([Property(null)], MultiLevelCategories.prototype, \"maximumTextWidth\", void 0);\n\n  __decorate([Property(null)], MultiLevelCategories.prototype, \"customAttributes\", void 0);\n\n  __decorate([Property('')], MultiLevelCategories.prototype, \"type\", void 0);\n\n  return MultiLevelCategories;\n}(ChildProperty);\n\nexport { MultiLevelCategories };\n/**\n * Strip line properties\n */\n\nvar StripLineSettings =\n/** @class */\nfunction (_super) {\n  __extends(StripLineSettings, _super);\n\n  function StripLineSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(true)], StripLineSettings.prototype, \"visible\", void 0);\n\n  __decorate([Property(false)], StripLineSettings.prototype, \"startFromAxis\", void 0);\n\n  __decorate([Property(null)], StripLineSettings.prototype, \"start\", void 0);\n\n  __decorate([Property(null)], StripLineSettings.prototype, \"end\", void 0);\n\n  __decorate([Property(null)], StripLineSettings.prototype, \"size\", void 0);\n\n  __decorate([Property('#808080')], StripLineSettings.prototype, \"color\", void 0);\n\n  __decorate([Property(null)], StripLineSettings.prototype, \"dashArray\", void 0);\n\n  __decorate([Property('Auto')], StripLineSettings.prototype, \"sizeType\", void 0);\n\n  __decorate([Property(false)], StripLineSettings.prototype, \"isRepeat\", void 0);\n\n  __decorate([Property(null)], StripLineSettings.prototype, \"repeatEvery\", void 0);\n\n  __decorate([Property(null)], StripLineSettings.prototype, \"repeatUntil\", void 0);\n\n  __decorate([Property(false)], StripLineSettings.prototype, \"isSegmented\", void 0);\n\n  __decorate([Property(null)], StripLineSettings.prototype, \"segmentStart\", void 0);\n\n  __decorate([Property(null)], StripLineSettings.prototype, \"segmentEnd\", void 0);\n\n  __decorate([Property(null)], StripLineSettings.prototype, \"segmentAxisName\", void 0);\n\n  __decorate([Complex({\n    color: 'transparent',\n    width: 1\n  }, Border)], StripLineSettings.prototype, \"border\", void 0);\n\n  __decorate([Property('')], StripLineSettings.prototype, \"text\", void 0);\n\n  __decorate([Property(null)], StripLineSettings.prototype, \"rotation\", void 0);\n\n  __decorate([Property('Middle')], StripLineSettings.prototype, \"horizontalAlignment\", void 0);\n\n  __decorate([Property('Middle')], StripLineSettings.prototype, \"verticalAlignment\", void 0);\n\n  __decorate([Complex(Theme.stripLineLabelFont, Font)], StripLineSettings.prototype, \"textStyle\", void 0);\n\n  __decorate([Property('Behind')], StripLineSettings.prototype, \"zIndex\", void 0);\n\n  __decorate([Property(1)], StripLineSettings.prototype, \"opacity\", void 0);\n\n  return StripLineSettings;\n}(ChildProperty);\n\nexport { StripLineSettings };\n/**\n * MultiLevelLabels properties\n */\n\nvar MultiLevelLabels =\n/** @class */\nfunction (_super) {\n  __extends(MultiLevelLabels, _super);\n\n  function MultiLevelLabels() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Center')], MultiLevelLabels.prototype, \"alignment\", void 0);\n\n  __decorate([Property('Wrap')], MultiLevelLabels.prototype, \"overflow\", void 0);\n\n  __decorate([Complex(Theme.axisLabelFont, Font)], MultiLevelLabels.prototype, \"textStyle\", void 0);\n\n  __decorate([Complex({\n    color: null,\n    width: 1,\n    type: 'Rectangle'\n  }, LabelBorder)], MultiLevelLabels.prototype, \"border\", void 0);\n\n  __decorate([Collection([], MultiLevelCategories)], MultiLevelLabels.prototype, \"categories\", void 0);\n\n  return MultiLevelLabels;\n}(ChildProperty);\n\nexport { MultiLevelLabels };\n/**\n * Specifies range for scrollbarSettings property\n * @public\n */\n\nvar ScrollbarSettingsRange =\n/** @class */\nfunction (_super) {\n  __extends(ScrollbarSettingsRange, _super);\n\n  function ScrollbarSettingsRange() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(null)], ScrollbarSettingsRange.prototype, \"minimum\", void 0);\n\n  __decorate([Property(null)], ScrollbarSettingsRange.prototype, \"maximum\", void 0);\n\n  return ScrollbarSettingsRange;\n}(ChildProperty);\n\nexport { ScrollbarSettingsRange };\n/**\n * Scrollbar Settings Properties for Lazy Loading\n */\n\nvar ScrollbarSettings =\n/** @class */\nfunction (_super) {\n  __extends(ScrollbarSettings, _super);\n\n  function ScrollbarSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], ScrollbarSettings.prototype, \"enable\", void 0);\n\n  __decorate([Property(null)], ScrollbarSettings.prototype, \"pointsLength\", void 0);\n\n  __decorate([Complex({}, ScrollbarSettingsRange)], ScrollbarSettings.prototype, \"range\", void 0);\n\n  return ScrollbarSettings;\n}(ChildProperty);\n\nexport { ScrollbarSettings };","map":null,"metadata":{},"sourceType":"module"}