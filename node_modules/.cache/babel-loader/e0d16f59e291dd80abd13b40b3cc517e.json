{"ast":null,"code":"import LineChart from '../line-chart/line-chart';\nimport SplineSegment from '../line-chart/spline-segment';\nimport LineSegment from '../line-chart/line-segment';\nimport { Point, Box } from '../../core';\nimport { SMOOTH } from '../constants';\nimport { setDefaultOptions } from '../../common';\n\nvar RadarLineChart = function (LineChart) {\n  function RadarLineChart() {\n    LineChart.apply(this, arguments);\n  }\n\n  if (LineChart) RadarLineChart.__proto__ = LineChart;\n  RadarLineChart.prototype = Object.create(LineChart && LineChart.prototype);\n  RadarLineChart.prototype.constructor = RadarLineChart;\n\n  RadarLineChart.prototype.pointSlot = function pointSlot(categorySlot, valueSlot) {\n    var valueRadius = categorySlot.center.y - valueSlot.y1;\n    var slot = Point.onCircle(categorySlot.center, categorySlot.middle(), valueRadius);\n    return new Box(slot.x, slot.y, slot.x, slot.y);\n  };\n\n  RadarLineChart.prototype.createSegment = function createSegment(linePoints, currentSeries, seriesIx) {\n    var style = currentSeries.style;\n    var pointType;\n\n    if (style === SMOOTH) {\n      pointType = SplineSegment;\n    } else {\n      pointType = LineSegment;\n    }\n\n    var segment = new pointType(linePoints, currentSeries, seriesIx);\n\n    if (linePoints.length === currentSeries.data.length) {\n      segment.options.closed = true;\n    }\n\n    return segment;\n  };\n\n  return RadarLineChart;\n}(LineChart);\n\nsetDefaultOptions(RadarLineChart, {\n  clip: false,\n  limitPoints: false\n});\nexport default RadarLineChart;","map":null,"metadata":{},"sourceType":"module"}