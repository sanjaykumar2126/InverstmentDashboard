{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\REACT-PRACTICE\\\\reactpage\\\\src\\\\Component\\\\Header\\\\Header.js\";\n// import * as React from 'react';\n// import Paper from '@material-ui/core/Paper';\n// import {\n//   Chart,\n//   PieSeries,\n//   Title,\n// } from '@devexpress/dx-react-chart-material-ui';\n// import { Animation } from '@devexpress/dx-react-chart';\n// const data = [\n//   { region: 'Asia', val: 4119626293 },\n//   { region: 'Africa', val: 1012956064 },\n//   { region: 'Northern America', val: 344124520 },\n//   { region: 'Latin America and the Caribbean', val: 590946440 },\n//   { region: 'Europe', val: 727082222 },\n//   { region: 'Oceania', val: 35104756 },\n// ];\n// export default class Demo extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data,\n//     };\n//   }\n//   render() {\n//     const { data: chartData } = this.state;\n//     return (\n//       <Paper>\n//         <Chart\n//           data={chartData}\n//         >\n//           <PieSeries\n//             valueField=\"val\"\n//             argumentField=\"region\"\n//             innerRadius={0.2}\n//             outerRadius={0.4}\n//           />\n//           <Animation />\n//         </Chart>\n//       </Paper>\n//     );\n//   }\n// }\n// import ReactApexChart from 'react-apexcharts'\n// export default class DonutChart extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       options: {\n//         responsive: [{\n//           breakpoint: 480,\n//           options: {\n//             chart: {\n//               width: 200\n//             },\n//             legend: {\n//               // position: 'bottom'\n//             }\n//           }\n//         }]\n//       },\n//       series: [30,70]\n//     }\n//   }\n//   render() {\n//     return (\n//       <div id=\"chart\">\n//         <ReactApexChart options={this.state.options} series={this.state.series} type=\"donut\" width=\"280\" />\n//       </div>\n//     );\n//   }\n// }\nimport React from \"react\"; // import {\n//   MDBContainer,\n//   MDBRow,\n//   MDBCol,\n//   MDBIcon,\n//   MDBSimpleChart\n// } from \"mdbreact\";\n// class ChartsPagePro extends React.Component {\n//   render() {\n//     return (\n//       <MDBContainer>\n//         <h3 className=\"mt-5\">Minimalistic charts</h3>\n//         <div style={{ marginTop: \"100px\" }}>\n//           <MDBContainer>\n//             <MDBRow className=\"text-center\">\n//               <MDBCol sm=\"4\">\n//                 <MDBSimpleChart\n//                   width={100}\n//                   height={100}\n//                   strokeWidth={3}\n//                   percent={56}\n//                   strokeColor=\"#4FB64E\"\n//                   labelFontWeight=\"300\"\n//                   labelColor=\"#000\"\n//                 />\n//                 <h6 className=\"mt-5\">\n//                   <span className=\"label green p-1 white-text\">\n//                     <strong>Sales</strong>\n//                     <MDBIcon icon=\"arrow-circle-up\" className=\"ml-1\" />\n//                   </span>\n//                 </h6>\n//               </MDBCol>\n//             </MDBRow>\n//           </MDBContainer>\n//         </div>\n//       </MDBContainer>\n//     );\n//   }\n// }\n// export default ChartsPagePro;\n// import React from 'react'\n\nimport 'react-circular-progressbar/dist/styles.css';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nexport default function Header() {\n  const percentage = 66;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(CircularProgressbar, {\n    value: percentage,\n    text: \"\".concat(percentage, \"%\"),\n    styles: buildStyles({\n      // Rotation of path and trail, in number of turns (0-1)\n      rotation: 0.25,\n      // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n      strokeLinecap: 'butt',\n      // Text size\n      textSize: '16px',\n      // How long animation takes to go from one percentage to another, in seconds\n      pathTransitionDuration: 0.5,\n      // Can specify path transition in more detail, or remove it entirely\n      // pathTransition: 'none',\n      // Colors\n      pathColor: \"rgba(62, 152, 199, \".concat(percentage / 100, \")\"),\n      textColor: '#f88',\n      trailColor: '#d6d6d6',\n      backgroundColor: '#3e98c7'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:\\Users\\Admin\\Documents\\REACT-PRACTICE\\reactpage\\src\\Component\\Header\\Header.js"],"names":["React","CircularProgressbar","buildStyles","Header","percentage","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,OAAO,4CAAP;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,4BAAjD;AACA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAMC,UAAU,GAAG,EAAnB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AACH,IAAA,KAAK,EAAEA,UADJ;AAEH,IAAA,IAAI,YAAKA,UAAL,MAFD;AAGH,IAAA,MAAM,EAAEF,WAAW,CAAC;AAClB;AACAG,MAAAA,QAAQ,EAAE,IAFQ;AAIlB;AACAC,MAAAA,aAAa,EAAE,MALG;AAOlB;AACAC,MAAAA,QAAQ,EAAE,MARQ;AAUlB;AACAC,MAAAA,sBAAsB,EAAE,GAXN;AAalB;AACA;AAEA;AACAC,MAAAA,SAAS,+BAAwBL,UAAU,GAAG,GAArC,MAjBS;AAkBlBM,MAAAA,SAAS,EAAE,MAlBO;AAmBlBC,MAAAA,UAAU,EAAE,SAnBM;AAoBlBC,MAAAA,eAAe,EAAE;AApBC,KAAD,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA8BD","sourcesContent":["// import * as React from 'react';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import {\r\n//   Chart,\r\n//   PieSeries,\r\n//   Title,\r\n// } from '@devexpress/dx-react-chart-material-ui';\r\n// import { Animation } from '@devexpress/dx-react-chart';\r\n\r\n// const data = [\r\n//   { region: 'Asia', val: 4119626293 },\r\n//   { region: 'Africa', val: 1012956064 },\r\n//   { region: 'Northern America', val: 344124520 },\r\n//   { region: 'Latin America and the Caribbean', val: 590946440 },\r\n//   { region: 'Europe', val: 727082222 },\r\n//   { region: 'Oceania', val: 35104756 },\r\n// ];\r\n\r\n// export default class Demo extends React.PureComponent {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       data,\r\n//     };\r\n//   }\r\n\r\n//   render() {\r\n//     const { data: chartData } = this.state;\r\n\r\n//     return (\r\n//       <Paper>\r\n//         <Chart\r\n//           data={chartData}\r\n          \r\n//         >\r\n//           <PieSeries\r\n//             valueField=\"val\"\r\n//             argumentField=\"region\"\r\n//             innerRadius={0.2}\r\n//             outerRadius={0.4}\r\n//           />\r\n//           <Animation />\r\n//         </Chart>\r\n//       </Paper>\r\n//     );\r\n//   }\r\n// }\r\n// import ReactApexChart from 'react-apexcharts'\r\n// export default class DonutChart extends React.Component {\r\n      \r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       options: {\r\n//         responsive: [{\r\n//           breakpoint: 480,\r\n//           options: {\r\n//             chart: {\r\n//               width: 200\r\n//             },\r\n//             legend: {\r\n//               // position: 'bottom'\r\n//             }\r\n//           }\r\n//         }]\r\n//       },\r\n//       series: [30,70]\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n      \r\n\r\n//       <div id=\"chart\">\r\n//         <ReactApexChart options={this.state.options} series={this.state.series} type=\"donut\" width=\"280\" />\r\n//       </div>\r\n\r\n\r\n//     );\r\n//   }\r\n// }\r\nimport React from \"react\";\r\n// import {\r\n//   MDBContainer,\r\n//   MDBRow,\r\n//   MDBCol,\r\n//   MDBIcon,\r\n//   MDBSimpleChart\r\n// } from \"mdbreact\";\r\n\r\n// class ChartsPagePro extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <MDBContainer>\r\n//         <h3 className=\"mt-5\">Minimalistic charts</h3>\r\n//         <div style={{ marginTop: \"100px\" }}>\r\n//           <MDBContainer>\r\n//             <MDBRow className=\"text-center\">\r\n//               <MDBCol sm=\"4\">\r\n//                 <MDBSimpleChart\r\n//                   width={100}\r\n//                   height={100}\r\n//                   strokeWidth={3}\r\n//                   percent={56}\r\n//                   strokeColor=\"#4FB64E\"\r\n//                   labelFontWeight=\"300\"\r\n//                   labelColor=\"#000\"\r\n//                 />\r\n//                 <h6 className=\"mt-5\">\r\n//                   <span className=\"label green p-1 white-text\">\r\n//                     <strong>Sales</strong>\r\n//                     <MDBIcon icon=\"arrow-circle-up\" className=\"ml-1\" />\r\n//                   </span>\r\n//                 </h6>\r\n//               </MDBCol>\r\n              \r\n//             </MDBRow>\r\n//           </MDBContainer>\r\n//         </div>\r\n//       </MDBContainer>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ChartsPagePro;\r\n// import React from 'react'\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nexport default function Header() {\r\n  const percentage = 66;\r\n  return (\r\n    <div>\r\n      <CircularProgressbar\r\n   value={percentage}\r\n   text={`${percentage}%`}\r\n   styles={buildStyles({\r\n     // Rotation of path and trail, in number of turns (0-1)\r\n     rotation: 0.25,\r\n  \r\n     // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n     strokeLinecap: 'butt',\r\n  \r\n     // Text size\r\n     textSize: '16px',\r\n  \r\n     // How long animation takes to go from one percentage to another, in seconds\r\n     pathTransitionDuration: 0.5,\r\n  \r\n     // Can specify path transition in more detail, or remove it entirely\r\n     // pathTransition: 'none',\r\n  \r\n     // Colors\r\n     pathColor: `rgba(62, 152, 199, ${percentage / 100})`,\r\n     textColor: '#f88',\r\n     trailColor: '#d6d6d6',\r\n     backgroundColor: '#3e98c7',\r\n   })}\r\n />\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}