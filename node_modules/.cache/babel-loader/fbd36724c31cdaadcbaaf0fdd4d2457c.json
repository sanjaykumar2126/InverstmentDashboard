{"ast":null,"code":"import IntlService from './intl-service';\nimport FormatService from './format-service';\n\nvar ChartService = function ChartService(chart, context) {\n  if (context === void 0) context = {};\n  this._intlService = context.intlService;\n  this.sender = context.sender || chart;\n  this.format = new FormatService(context.intlService);\n  this.chart = chart;\n  this.rtl = Boolean(context.rtl);\n};\n\nvar prototypeAccessors = {\n  intl: {\n    configurable: true\n  }\n};\n\nprototypeAccessors.intl.get = function () {\n  return this._intlService || IntlService.implementation;\n};\n\nprototypeAccessors.intl.set = function (value) {\n  this._intlService = value;\n  this.format.intl = value;\n};\n\nChartService.prototype.notify = function notify(name, args) {\n  if (this.chart) {\n    this.chart.trigger(name, args);\n  }\n};\n\nChartService.prototype.isPannable = function isPannable(axis) {\n  var pannable = ((this.chart || {}).options || {}).pannable;\n  return pannable && pannable.lock !== axis;\n};\n\nObject.defineProperties(ChartService.prototype, prototypeAccessors);\nexport default ChartService;","map":null,"metadata":{},"sourceType":"module"}