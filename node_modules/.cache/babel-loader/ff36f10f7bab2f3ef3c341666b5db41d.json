{"ast":null,"code":"import { drawing, Color } from '@progress/kendo-drawing';\nimport { interpolateValue, setDefaultOptions, round, limitValue } from '../../common';\nimport { ANGULAR_SPEED, LINEAR, RADIAL_RANGE_POINTER } from '../constants';\nvar MAX_DURATION = 800;\n\nvar RangePointerAnimation = function (superclass) {\n  function RangePointerAnimation(element, options) {\n    superclass.call(this, element, options);\n    var animationOptions = this.options;\n    var duration = Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration * 1000;\n    animationOptions.duration = limitValue(duration, ANGULAR_SPEED, MAX_DURATION);\n    var startColor = element.elements.options.get(\"stroke.color\");\n    var color = element.currentColor();\n\n    if (startColor !== color) {\n      this.startColor = new Color(startColor);\n      this.color = new Color(color);\n    }\n  }\n\n  if (superclass) RangePointerAnimation.__proto__ = superclass;\n  RangePointerAnimation.prototype = Object.create(superclass && superclass.prototype);\n  RangePointerAnimation.prototype.constructor = RangePointerAnimation;\n\n  RangePointerAnimation.prototype.step = function step(pos) {\n    var ref = this;\n    var options = ref.options;\n    var startColor = ref.startColor;\n    var color = ref.color;\n    var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n    this.element.angle(angle);\n\n    if (color) {\n      var r = round(interpolateValue(startColor.r, color.r, pos));\n      var g = round(interpolateValue(startColor.g, color.g, pos));\n      var b = round(interpolateValue(startColor.b, color.b, pos));\n      this.element.stroke(new Color(r, g, b).toHex());\n    }\n  };\n\n  return RangePointerAnimation;\n}(drawing.Animation);\n\nsetDefaultOptions(RangePointerAnimation, {\n  easing: LINEAR,\n  duration: ANGULAR_SPEED\n});\ndrawing.AnimationFactory.current.register(RADIAL_RANGE_POINTER, RangePointerAnimation);\nexport default RangePointerAnimation;","map":null,"metadata":{},"sourceType":"module"}